<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BelowAbsoluteZeroErrorMessage" xml:space="preserve">
    <value>Temperature cannot be below absolute zero</value>
  </data>
  <data name="BufferCannotBeNull" xml:space="preserve">
    <value>Buffer cannot be null.</value>
  </data>
  <data name="BytesCopyCannotBeNegative" xml:space="preserve">
    <value>Number of bytes to copy cannot be negative.</value>
  </data>
  <data name="CannotAcquireUpgradeableLockWhileReadLock" xml:space="preserve">
    <value>Thread is not allowed to acquire upgradeable read lock while it has a read lock</value>
  </data>
  <data name="CannotAcquireWriteLockWhileReadLock" xml:space="preserve">
    <value>Thread is not allowed to acquire writelock while it has a read lock</value>
  </data>
  <data name="CannotParseTimeWithFormats" xml:space="preserve">
    <value>Couldn't parse the time with any of the specified format(s)</value>
  </data>
  <data name="CannotRedoWhileTransaction" xml:space="preserve">
    <value>Cannot redo an operation while a transaction active</value>
  </data>
  <data name="CannotUndoWhileTransaction" xml:space="preserve">
    <value>Cannot undo an operation while a transaction active.</value>
  </data>
  <data name="DestinationOffsetCannotBeNegative" xml:space="preserve">
    <value>Destination offset cannot be negative.</value>
  </data>
  <data name="DivideByZero" xml:space="preserve">
    <value>Cannot divide with Zero</value>
  </data>
  <data name="DivisionByZeroExceptionTextFormat" xml:space="preserve">
    <value>Conversion from unit '{0}' to unit '{0}' resulted in division by zero</value>
  </data>
  <data name="HourOutOfRange" xml:space="preserve">
    <value>Hour can only be in range [0-23]</value>
  </data>
  <data name="MaxItemsLessThenZero" xml:space="preserve">
    <value>Max items cannot be less then zero</value>
  </data>
  <data name="MinutesOutOfRange" xml:space="preserve">
    <value>Minute can only be in range [0-59]</value>
  </data>
  <data name="MoreThenOneFactorySpecified" xml:space="preserve">
    <value>More then one default factory exist for Interface: {0}</value>
  </data>
  <data name="NoFormatsSpecified" xml:space="preserve">
    <value>No format(s) specified</value>
  </data>
  <data name="NoImplementationConfigured" xml:space="preserve">
    <value>No implementation was configured for the interface: {0}.</value>
  </data>
  <data name="NoRedoAvailable" xml:space="preserve">
    <value>No redo operations available</value>
  </data>
  <data name="NoUndoAvailable" xml:space="preserve">
    <value>No undo operations available</value>
  </data>
  <data name="PolicyNotAllowRecursiveLocks" xml:space="preserve">
    <value>Recursive policy doesn't allow recursive locks</value>
  </data>
  <data name="PropertyNotExist" xml:space="preserve">
    <value>Property '{0}' doesn't exist for Type: '{1}'</value>
  </data>
  <data name="QueueIsEmpty" xml:space="preserve">
    <value>Queue doesn't contain any items</value>
  </data>
  <data name="SecondsOutOfRange" xml:space="preserve">
    <value>Second can only be in range [0-59]</value>
  </data>
  <data name="ThreadDoesntHoldReadLock" xml:space="preserve">
    <value>Thread doesn't hold any read lock</value>
  </data>
  <data name="ThreadDoesntHoldUpgradeableLock" xml:space="preserve">
    <value>Thread doesn't hold any upgradeable lock</value>
  </data>
  <data name="ThreadDoesntHoldWriteLock" xml:space="preserve">
    <value>Thread doesn't hold any write lock</value>
  </data>
  <data name="TransactionActive" xml:space="preserve">
    <value>There is already an transaction active</value>
  </data>
  <data name="TransactionNameActive" xml:space="preserve">
    <value>There is already an transaction {0} active</value>
  </data>
  <data name="TypeWasNotMapped" xml:space="preserve">
    <value>Type: {0} was not mapped</value>
  </data>
  <data name="UnknownTemperatureUnit" xml:space="preserve">
    <value>Unknown temperature unit</value>
  </data>
  <data name="WorkerQueueAlreadyRunning" xml:space="preserve">
    <value>Worker queue is already running. Please shut it down first before you try to start it</value>
  </data>
  <data name="WorkerQueueShutedDown" xml:space="preserve">
    <value>The worker queue has been shutdown and is no longer running</value>
  </data>
  <data name="XMLStringCannotBeNull" xml:space="preserve">
    <value>xml string can't be null or empty</value>
  </data>
  <data name="ImplementationTypeIsNotAnInstantiatableClass" xml:space="preserve">
    <value>The implementation type is not an instantiatable class</value>
  </data>
  <data name="NoDefaultConstructorCouldBeFound" xml:space="preserve">
    <value>No default constructor could be found</value>
  </data>
  <data name="UnableToCreateInstanceOfType" xml:space="preserve">
    <value>Unable to create instance of type</value>
  </data>
  <data name="NoRequiredPrimaryConstructorCouldBeFoundForTypeFormat" xml:space="preserve">
    <value>No required primary constructor could be found for type: {0}.</value>
  </data>
  <data name="MilliSecondsOutOfRange" xml:space="preserve">
    <value>Millisecond can only be in range [0-999]</value>
  </data>
  <data name="IoCCircularReferenceDetected" xml:space="preserve">
    <value>Circular reference detected for type: {0}.</value>
  </data>
</root>